
// ------------------
//defiinition entries
// ------------------
def getGitHash = { ->
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'rev-parse', '--short', 'HEAD'
        standardOutput = stdout
    }
    return '-'+stdout.toString().trim()
}

def getSprintRound = { ->
    if (project.hasProperty("SPRINT_ROUND")) {
        return project.property("SPRINT_ROUND")
    } else {
        return ''
    }
}

// buildscript
buildscript {
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
        maven { url 'http://download.crashlytics.com/maven' }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:0.12.+'
        classpath 'com.crashlytics.tools.gradle:crashlytics-gradle:1.+'
    }
}

allprojects {
    repositories {
        mavenCentral()
        maven { url 'https://oss.sonatype.org/content/repositories/snapshots' }
    }
}

apply plugin: 'android'
apply plugin: 'crashlytics'

repositories {
    mavenCentral()
    maven { url 'http://mvnrepository.com/artifact/' }
    maven { url 'http://download.crashlytics.com/maven' }
}

// check that the SEPTA.signing gradle property exists and that its value is the filename to a file
//  that has the extension of gradle
if (project.hasProperty("SEPTA.signing") && file(project.property("SEPTA.signing") + ".gradle").exists()) {
    apply from: project.property("SEPTA.signing") + ".gradle"
}

// using some properties and the Git hash, name the APK.
android.applicationVariants.all { variant ->
    def apkName = "SEPTA-";
    apkName += variant.buildType.name;

    if (project.hasProperty("SPRINT_ROUND")) {
        apkName += "-r" + "${getSprintRound}";
    }

    apkName += "-v" + android.defaultConfig.versionName + "-b" + android.defaultConfig.versionCode + "${getGitHash}";
    if (!variant.zipAlign) {
        apkName += "-unaligned";
    }

    apkName += ".apk";

    variant.outputFile = file("$project.buildDir/apk/" + apkName)
}

android {
    compileSdkVersion 19
    buildToolsVersion '19.1.0'
    defaultConfig {
        minSdkVersion 9
        targetSdkVersion 19
        versionCode 23
        versionName '0.1.0'
    }
    sourceSets {
//        androidTest.setRoot('src/test') //note that this is androidTest instead of instrumentTest
    }
    signingConfigs {
        prerelease {
            storeFile file("${SEPTA_DEVELOPMENT_KEYSTORE_FILE}")
            storePassword SEPTA_DEVELOPMENT_KEYSTORE_PASSWORD
            keyAlias 'prerelease'
            keyPassword PRERELEASE_KEYALIAS_PASSWORD
        }
        alpha {
            storeFile file("${SEPTA_DEVELOPMENT_KEYSTORE_FILE}")
            storePassword SEPTA_DEVELOPMENT_KEYSTORE_PASSWORD
            keyAlias 'alpha'
            keyPassword ALPHA_KEYALIAS_PASSWORD
        }
        beta {
            storeFile file("${SEPTA_DEVELOPMENT_KEYSTORE_FILE}")
            storePassword SEPTA_DEVELOPMENT_KEYSTORE_PASSWORD
            keyAlias 'beta'
            keyPassword BETA_KEYALIAS_PASSWORD
        }
        release {
            storeFile file("${SEPTA_PRODUCTION_KEYSTORE_FILE}")
            storePassword SEPTA_PRODUCTION_KEYSTORE_PASSWORD
            keyAlias 'release'
            keyPassword RELEASE_KEYALIAS_PASSWORD
        }
    }
    buildTypes {
        debug {
            runProguard false
            debuggable true
            zipAlign false
            signingConfig signingConfigs.prerelease
            versionNameSuffix "d" + "${getSprintRound}" + "${getGitHash}"
            buildConfigField "String", "VERSIONNAME", "\"${defaultConfig.versionName}-b${defaultConfig.versionCode}\""
        }
        alpha {
            runProguard false
            debuggable false
            zipAlign true
            signingConfig signingConfigs.prerelease
            versionNameSuffix "a" + "${getSprintRound}" + "${getGitHash}"
            buildConfigField "String", "VERSIONNAME", "\"${defaultConfig.versionName}-b${defaultConfig.versionCode}\""
        }
        beta {
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            debuggable false
            zipAlign true
            signingConfig signingConfigs.prerelease
            versionNameSuffix "b" + "${getSprintRound}" + "${getGitHash}"
            buildConfigField "String", "VERSIONNAME", "\"${defaultConfig.versionName}-b${defaultConfig.versionCode}\""
        }
        release {
            runProguard true
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.txt'
            debuggable false
            zipAlign true
            signingConfig signingConfigs.release
            buildConfigField "String", "VERSIONNAME", "\"${defaultConfig.versionName}\""
        }
    }
    productFlavors {
    }
}

dependencies {
    compile 'com.android.support:gridlayout-v7:19.0.1'
    compile 'com.android.support:support-v4:19.1.0'
    compile 'com.android.support:appcompat-v7:19.1.0'
    compile 'com.google.android.gms:play-services:4.4.52'
    compile 'com.crashlytics.android:crashlytics:1.+'
    compile group: 'com.squareup.okhttp', name: 'okhttp', version: '1.3.0'
    compile group: 'com.squareup.okhttp', name: 'okhttp-apache', version: '1.3.0'
    compile group: 'com.squareup.retrofit', name: 'retrofit', version: '1.5.0'
    compile group: 'org.simpleframework', name: 'simple-xml', version: '2.6.3'
    compile group: 'com.readystatesoftware.sqliteasset', name: 'sqliteassethelper', version: '+'
    compile group: 'com.andraskindler.quickscroll', name: 'quickscroll', version: '0.9.8'
    compile group: 'se.emilsjolander', name: 'stickylistheaders', version: '+'
    compile('de.keyboardsurfer.android.widget:crouton:1.8.4') {
        exclude group: 'com.google.android', module: 'support-v4'
    }
}
